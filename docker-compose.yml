version: "3.9"

services:

  xsshunterexpress:
    image: l4rm4nd/xsshunter:latest
    container_name: xsshunter-app
    restart: unless-stopped
    environment:
      - HOSTNAME=xss.example.com
      - SSL_ENABLED=false
      # If SSL_ENABLED=true, then set required email
      #- SSL_CONTACT_EMAIL=YourEmail@gmail.com
      - MAX_PAYLOAD_UPLOAD_SIZE_MB=50
      - CONTROL_PANEL_ENABLED=true
      # Whether or not to enable email notifications via SMTP for XSS payload fires.
      #- SMTP_EMAIL_NOTIFICATIONS_ENABLED=true
      #- SMTP_HOST=smtp.gmail.com
      #- SMTP_PORT=465
      #- SMTP_USE_TLS=true
      #- SMTP_USERNAME=YourEmail@gmail.com
      #- SMTP_PASSWORD=YourEmailPassword
      #- SMTP_FROM_EMAIL=YourEmail@gmail.com
      #- SMTP_RECEIVER_EMAIL=YourEmail@gmail.com
      - SCREENSHOTS_DIR=/app/payload-fire-images
      - DATABASE_NAME=xsshunterexpress
      - DATABASE_USER=xsshunterexpress
      - DATABASE_PASSWORD=xsshunterexpress
      - DATABASE_HOST=postgresdb
      - NODE_ENV=production
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    volumes:
      # Directory where payload fire images are stored.
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/xsshunter/payload-fire-images:/app/payload-fire-images
    depends_on:
      - postgresdb
    #networks:
    #  - dev
    #labels:
    #  - traefik.enable=true
    #  - traefik.http.routers.xsshunter.rule=Host(`xss.example.com`)&&PathPrefix(`/`)
    #  - traefik.http.services.xsshunter.loadbalancer.server.port=80
    #  - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.memRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.memResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.docker.network=dev
    #  # Part for optional traefik middlewares
    #  - traefik.http.routers.xsshunter.middlewares=local-ipwhitelist@file

  postgresdb:
    image: postgres:latest
    container_name: xsshunter-db
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: xsshunterexpress
      POSTGRES_DB: xsshunterexpress
      POSTGRES_PASSWORD: xsshunterexpress
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/xsshunter/pgdata:/var/lib/postgresql/data/pgdata
    #networks:
    #  - dev

#networks:
#  dev:
#    external: true
